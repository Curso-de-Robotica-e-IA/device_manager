[project]
name = "device_manager"
version = "1.3.5"
description = ""
authors = [
    { name = "Bruno Pinheiro", email = "bruno.opinheiro@outlook.com" },
    { name = "Mateus Machado", email = "mateus.gm@gmail.com" }
]
license = { text = "GNU AFFERO GENERAL PUBLIC LICENSE v3.0" }
readme = "README.md"
requires-python = ">=3.10, <3.14"
dependencies = [
    "zeroconf>=0.140.1",
    "numpy (>=1.24.4,<2.0.0)",
    "opencv-python>=4.11.0.86",
    "qrcode>=8.0",
    "uiautomator2>=3.2.9",
    "rich>=13.9.4"
]

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
taskipy = "^1.14.1"
pytest-cov = "^6.0.0"
pytest-mock = "^3.14.0"
ruff = "^0.9.6"
pytest-socket = "^0.7.0"
ipython = "^8.37.0"

[tool.poetry.group.doc.dependencies]
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.5"
pymdown-extensions = "^10.14.3"
mkdocstrings-python = "^1.16.2"

[project.urls]
homepage = "https://github.com/Curso-de-Robotica-e-IA/device_manager/tree/documentation"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-vv --cov=device_manager --cov-report=term-missing -p no:warnings --disable-socket"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.ruff]
line-length = 79
indent-width = 4
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
preview = true
quote-style = 'single'
indent-style = "space"
docstring-code-format = false

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
pre_test = 'task format'
test = 'pytest -vv --cov=device_manager --cov-report=term-missing -p no:warnings --disable-socket'
post_test = 'coverage html'
docs = "mkdocs serve"
bdocs = "mkdocs build"